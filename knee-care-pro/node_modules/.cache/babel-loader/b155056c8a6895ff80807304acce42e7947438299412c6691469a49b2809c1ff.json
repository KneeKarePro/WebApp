{"ast":null,"code":"var _jsxFileName = \"/Users/Daniyal/knee-care-pro/src/components/LoginScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginScreen.css';\nimport logo from '../assets/KneeKare_Pro_Logo.jpg'; // Make sure the path to your logo is correct\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showLogin, setShowLogin] = useState(false);\n  const [loginAs, setLoginAs] = useState('');\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prevCredentials => ({\n      ...prevCredentials,\n      [name]: value\n    }));\n  };\n  const handleLogin = role => {\n    let profilePath = role === 'patient' ? '/patient-profile' : '/clinician-profile';\n    navigate(profilePath);\n  };\n  const initiateLogin = role => {\n    setShowLogin(true);\n    setLoginAs(role);\n    setCredentials({\n      username: '',\n      password: ''\n    }); // Reset credentials on role change\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"KneeKare Pro Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), !showLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"role-button\",\n        onClick: () => initiateLogin('patient'),\n        children: \"Login as Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"role-button\",\n        onClick: () => initiateLogin('clinician'),\n        children: \"Login as Clinician\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Login as \", loginAs === 'patient' ? 'Patient' : 'Clinician']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"username\",\n        value: credentials.username,\n        onChange: handleInputChange,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: credentials.password,\n        onChange: handleInputChange,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: () => handleLogin(loginAs),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button cancel\",\n        onClick: () => setShowLogin(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"Xaw9k+5wsftbQqDC/mafoE7x9Qs=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useNavigate","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginScreen","_s","navigate","showLogin","setShowLogin","loginAs","setLoginAs","credentials","setCredentials","username","password","handleInputChange","e","name","value","target","prevCredentials","handleLogin","role","profilePath","initiateLogin","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/Daniyal/knee-care-pro/src/components/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginScreen.css';\nimport logo from '../assets/KneeKare_Pro_Logo.jpg'; // Make sure the path to your logo is correct\n\nconst LoginScreen = () => {\n  const navigate = useNavigate();\n  const [showLogin, setShowLogin] = useState(false);\n  const [loginAs, setLoginAs] = useState('');\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials(prevCredentials => ({\n      ...prevCredentials,\n      [name]: value\n    }));\n  };\n\nconst handleLogin = (role) => {\n  let profilePath = role === 'patient' ? '/patient-profile' : '/clinician-profile';\n  navigate(profilePath);\n};\n\n\n  const initiateLogin = (role) => {\n    setShowLogin(true);\n    setLoginAs(role);\n    setCredentials({ username: '', password: '' }); // Reset credentials on role change\n  };\n\n  return (\n    <div className=\"login-container\">\n      <img src={logo} alt=\"KneeKare Pro Logo\" className=\"logo\" />\n      {!showLogin && (\n        <>\n          <button className=\"role-button\" onClick={() => initiateLogin('patient')}>Login as Patient</button>\n          <button className=\"role-button\" onClick={() => initiateLogin('clinician')}>Login as Clinician</button>\n        </>\n      )}\n      {showLogin && (\n        <div className=\"login-section\">\n          <h2>Login as {loginAs === 'patient' ? 'Patient' : 'Clinician'}</h2>\n          <input \n            type=\"text\" \n            placeholder=\"Username\" \n            name=\"username\" \n            value={credentials.username} \n            onChange={handleInputChange} \n            className=\"login-input\" \n          />\n          <input \n            type=\"password\" \n            placeholder=\"Password\" \n            name=\"password\" \n            value={credentials.password} \n            onChange={handleInputChange} \n            className=\"login-input\" \n          />\n          <button className=\"login-button\" onClick={() => handleLogin(loginAs)}>Login</button>\n\n          <button className=\"login-button cancel\" onClick={() => setShowLogin(false)}>Cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}