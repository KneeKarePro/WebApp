{"ast":null,"code":"var _jsxFileName = \"/Users/Daniyal/knee-care-pro/src/components/ClinicianProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ClinicianProfile.css'; // Ensure this path is correct based on your file structure\n\n// Sample client data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clients = [{\n  name: 'John Doe',\n  dob: '01/18/1969'\n}, {\n  name: 'Jane Smith',\n  dob: '02/14/1975'\n}, {\n  name: 'Chris Johnson',\n  dob: '03/30/1982'\n}, {\n  name: 'Patricia Brown',\n  dob: '04/25/1990'\n}, {\n  name: 'Michael Davis',\n  dob: '05/16/1985'\n}\n// Add more as needed\n];\nconst ClinicianProfile = () => {\n  _s();\n  const [selectedClients, setSelectedClients] = useState([]);\n  const toggleSelection = index => {\n    setSelectedClients(prevSelected => {\n      if (prevSelected.includes(index)) {\n        return prevSelected.filter(i => i !== index);\n      } else {\n        return [...prevSelected, index];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clinician-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clinician Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"clients-list\",\n      children: clients.map((client, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `client-item ${selectedClients.includes(index) ? 'selected' : ''}`,\n        onClick: () => toggleSelection(index),\n        children: `${client.name} DOB: ${client.dob}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ClinicianProfile, \"JEjjUnxoaotQcBJZ1Ti6aClSfFM=\");\n_c = ClinicianProfile;\nexport default ClinicianProfile;\nvar _c;\n$RefreshReg$(_c, \"ClinicianProfile\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","clients","name","dob","ClinicianProfile","_s","selectedClients","setSelectedClients","toggleSelection","index","prevSelected","includes","filter","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","client","onClick","_c","$RefreshReg$"],"sources":["/Users/Daniyal/knee-care-pro/src/components/ClinicianProfile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ClinicianProfile.css'; // Ensure this path is correct based on your file structure\n\n// Sample client data\nconst clients = [\n  { name: 'John Doe', dob: '01/18/1969' },\n  { name: 'Jane Smith', dob: '02/14/1975' },\n  { name: 'Chris Johnson', dob: '03/30/1982' },\n  { name: 'Patricia Brown', dob: '04/25/1990' },\n  { name: 'Michael Davis', dob: '05/16/1985' },\n  // Add more as needed\n];\n\nconst ClinicianProfile = () => {\n  const [selectedClients, setSelectedClients] = useState([]);\n\n  const toggleSelection = (index) => {\n    setSelectedClients((prevSelected) => {\n      if (prevSelected.includes(index)) {\n        return prevSelected.filter(i => i !== index);\n      } else {\n        return [...prevSelected, index];\n      }\n    });\n  };\n\n  return (\n    <div className=\"clinician-profile\">\n      <h1>Clinician Profile</h1>\n      <ul className=\"clients-list\">\n        {clients.map((client, index) => (\n          <li key={index} className={`client-item ${selectedClients.includes(index) ? 'selected' : ''}`} onClick={() => toggleSelection(index)}>\n            {`${client.name} DOB: ${client.dob}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ClinicianProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB,CAAC,CAAC;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,CACd;EAAEC,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE;AAAa,CAAC,EACvC;EAAED,IAAI,EAAE,YAAY;EAAEC,GAAG,EAAE;AAAa,CAAC,EACzC;EAAED,IAAI,EAAE,eAAe;EAAEC,GAAG,EAAE;AAAa,CAAC,EAC5C;EAAED,IAAI,EAAE,gBAAgB;EAAEC,GAAG,EAAE;AAAa,CAAC,EAC7C;EAAED,IAAI,EAAE,eAAe;EAAEC,GAAG,EAAE;AAAa;AAC3C;AAAA,CACD;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMU,eAAe,GAAIC,KAAK,IAAK;IACjCF,kBAAkB,CAAEG,YAAY,IAAK;MACnC,IAAIA,YAAY,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;QAChC,OAAOC,YAAY,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,KAAK,CAAC;MAC9C,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,YAAY,EAAED,KAAK,CAAC;MACjC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAIc,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzBd,OAAO,CAACmB,GAAG,CAAC,CAACC,MAAM,EAAEZ,KAAK,kBACzBT,OAAA;QAAgBc,SAAS,EAAG,eAAcR,eAAe,CAACK,QAAQ,CAACF,KAAK,CAAC,GAAG,UAAU,GAAG,EAAG,EAAE;QAACa,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACC,KAAK,CAAE;QAAAM,QAAA,EACjI,GAAEM,MAAM,CAACnB,IAAK,SAAQmB,MAAM,CAAClB,GAAI;MAAC,GAD7BM,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAzBID,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}